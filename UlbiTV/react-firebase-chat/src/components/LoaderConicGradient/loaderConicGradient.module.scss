.loader {
  width: fit-content;
  font-size: 40px;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  font-weight: bold;
  text-transform: uppercase;
  color: #0000;
  -webkit-text-stroke: 1px #000;
  --g: conic-gradient(#000 0 0) no-repeat text;
  background: var(--g) 0, var(--g) 100%, var(--g) 0 0, var(--g) 0 100%;
  animation: fill 1s linear infinite;
}

.loader::before {
  content: "Loading";
}

@keyframes fill {
  0%, 100% {
    background-size: 0 100%, 0 100%, 100% 0, 100% 0;
  }
  50% {
    background-size: 55% 100%, 55% 100%, 100% 0, 100% 0;
  }
  50.01% {
    background-size: 0 100%, 0 100%, 100% 55%, 100% 55%;
  }
}

/*
Давайте подробно разберем стили, указанные в вашем CSS-коде для класса .loader и псевдоэлемента ::before, а также анимацию @keyframes fill.

▎Стили для .loader

1. width: fit-content;

   • Устанавливает ширину элемента в соответствии с его содержимым. Элемент будет занимать минимально необходимое пространство.

2. font-size: 40px;

   • Устанавливает размер шрифта текста внутри элемента на 40 пикселей.

3. font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;

   • Устанавливает шрифт для текста. В этом списке указаны системные шрифты, которые будут использоваться в зависимости от операционной системы и доступных шрифтов.

4. font-weight: bold;

   • Устанавливает жирное начертание текста.

5. text-transform: uppercase;

   • Преобразует текст в верхний регистр (все буквы будут заглавными).

6. color: #0000;

   • Устанавливает цвет текста на полностью прозрачный (красный, зеленый и синий компоненты равны 0).

7. -webkit-text-stroke: 1px #000;

   • Добавляет обводку текста черного цвета (размером 1 пиксель). Это свойство работает только в браузерах на основе WebKit (например, Safari и Chrome).

8. --g: conic-gradient(#000 0 0) no-repeat text;

   • Определяет пользовательскую переменную CSS --g, которая содержит конусный градиент. В данном случае градиент черного цвета не будет повторяться и применяется к тексту.

9. background: var(--g) 0, var(--g) 100%, var(--g) 0 0, var(--g) 0 100%;

   • Устанавливает фоновое изображение для элемента с использованием ранее определенной переменной --g. Это создает несколько слоев фона с градиентом.

10. animation: fill 1s linear infinite;

    • Применяет анимацию fill, которая длится 1 секунду, имеет линейную временную функцию и будет повторяться бесконечно.

▎Псевдоэлемент ::before

1. content: "Loading";

   • Создает содержимое перед элементом .loader. В данном случае перед текстом будет отображаться слово "Loading".

▎Анимация @keyframes fill

1. 0%, 100% { background-size: 0 100%, 0 100%, 100% 0, 100% 0; }

   • На начальном (0%) и конечном (100%) ключевых кадрах размеры фона установлены так, что он полностью скрыт (ширина фона равна 0).

2. 50% { background-size: 55% 100%, 55% 100%, 100% 0, 100% 0; }

   • На середине анимации (50%) размеры фона увеличиваются до 55% по ширине для первых двух слоев, а остальные остаются скрытыми.

3. 50.01% { background-size: 0 100%, 0 100%, 100% 55%, 100% 55%; }

   • На момент чуть после середины (50.01%) размеры фона резко меняются: первые два слоя снова скрыты, а последние два слоя увеличиваются до 55%.

▎Итог

В результате получается эффект загрузки, где текст "Loading" плавно заполняется цветом фона за счет анимации изменения размеров фоновых слоев. Это создает визуально привлекательный индикатор загрузки, который привлекает внимание пользователя.

*/